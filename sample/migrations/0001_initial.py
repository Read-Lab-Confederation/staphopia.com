# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import sample.models
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SampleSummary',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('sample_tag', models.TextField(blank=True)),
                ('username', models.CharField(max_length=30, blank=True)),
                ('contact_name', models.TextField(blank=True)),
                ('contact_email', models.CharField(max_length=75, blank=True)),
                ('contact_link', models.CharField(max_length=200, blank=True)),
                ('sequencing_center', models.TextField(blank=True)),
                ('sequencing_center_link', models.CharField(max_length=200, blank=True)),
                ('sequencing_date', models.DateField(null=True, blank=True)),
                ('sequencing_libaray_method', models.TextField(blank=True)),
                ('sequencing_platform', models.TextField(blank=True)),
                ('publication_link', models.CharField(max_length=200, blank=True)),
                ('pubmed_id', models.TextField(blank=True)),
                ('doi', models.TextField(blank=True)),
                ('funding_agency', models.TextField(blank=True)),
                ('funding_agency_link', models.CharField(max_length=200, blank=True)),
                ('strain', models.TextField(blank=True)),
                ('isolation_date', models.DateField(null=True, blank=True)),
                ('isolation_country', models.TextField(blank=True)),
                ('isolation_city', models.TextField(blank=True)),
                ('isolation_region', models.TextField(blank=True)),
                ('host_name', models.TextField(blank=True)),
                ('host_health', models.TextField(blank=True)),
                ('host_age', models.SmallIntegerField(null=True, blank=True)),
                ('host_gender', models.TextField(blank=True)),
                ('comments', models.TextField(blank=True)),
                ('vancomycin_mic', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('penicillin_mic', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('oxacillin_mic', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('clindamycin_mic', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('daptomycin_mic', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('levofloxacin_mic', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('linezolid_mic', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('rifampin_mic', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('tetracycline_mic', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('trimethoprim_mic', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('source', models.TextField(blank=True)),
                ('is_public', models.NullBooleanField()),
                ('is_paired', models.NullBooleanField()),
                ('is_published', models.NullBooleanField()),
                ('rank', models.SmallIntegerField(null=True, blank=True)),
                ('total_bp', models.BigIntegerField(null=True, blank=True)),
                ('total_reads', models.BigIntegerField(null=True, blank=True)),
                ('coverage', models.DecimalField(null=True, max_digits=7, decimal_places=2, blank=True)),
                ('min_read_length', models.IntegerField(null=True, blank=True)),
                ('mean_read_length', models.DecimalField(null=True, max_digits=10, decimal_places=3, blank=True)),
                ('max_read_length', models.IntegerField(null=True, blank=True)),
                ('qual_mean', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('qual_std', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('qual_25th', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('qual_median', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('qual_75th', models.DecimalField(null=True, max_digits=6, decimal_places=3, blank=True)),
                ('total_contig', models.SmallIntegerField(null=True, blank=True)),
                ('total_contig_length', models.IntegerField(null=True, blank=True)),
                ('min_contig_length', models.IntegerField(null=True, blank=True)),
                ('median_contig_length', models.IntegerField(null=True, blank=True)),
                ('mean_contig_length', models.DecimalField(null=True, max_digits=9, decimal_places=2, blank=True)),
                ('max_contig_length', models.IntegerField(null=True, blank=True)),
                ('n50_contig_length', models.IntegerField(null=True, blank=True)),
                ('l50_contig_count', models.SmallIntegerField(null=True, blank=True)),
                ('ng50_contig_length', models.IntegerField(null=True, blank=True)),
                ('lg50_contig_count', models.SmallIntegerField(null=True, blank=True)),
                ('contigs_greater_1k', models.SmallIntegerField(null=True, blank=True)),
                ('contigs_greater_10k', models.SmallIntegerField(null=True, blank=True)),
                ('contigs_greater_100k', models.SmallIntegerField(null=True, blank=True)),
                ('contigs_greater_1m', models.SmallIntegerField(null=True, blank=True)),
                ('percent_contigs_greater_1k', models.DecimalField(null=True, max_digits=4, decimal_places=2, blank=True)),
                ('percent_contigs_greater_10k', models.DecimalField(null=True, max_digits=4, decimal_places=2, blank=True)),
                ('percent_contigs_greater_100k', models.DecimalField(null=True, max_digits=4, decimal_places=2, blank=True)),
                ('percent_contigs_greater_1m', models.DecimalField(null=True, max_digits=4, decimal_places=2, blank=True)),
                ('contig_percent_a', models.DecimalField(null=True, max_digits=4, decimal_places=2, blank=True)),
                ('contig_percent_t', models.DecimalField(null=True, max_digits=4, decimal_places=2, blank=True)),
                ('contig_percent_g', models.DecimalField(null=True, max_digits=4, decimal_places=2, blank=True)),
                ('contig_percent_c', models.DecimalField(null=True, max_digits=4, decimal_places=2, blank=True)),
                ('contig_percent_n', models.DecimalField(null=True, max_digits=4, decimal_places=2, blank=True)),
                ('contig_non_acgtn', models.DecimalField(null=True, max_digits=4, decimal_places=2, blank=True)),
                ('num_contig_non_acgtn', models.SmallIntegerField(null=True, blank=True)),
                ('gc_content', models.DecimalField(null=True, max_digits=65535, decimal_places=65535, blank=True)),
                ('total_snps', models.BigIntegerField(null=True, blank=True)),
                ('total_indels', models.BigIntegerField(null=True, blank=True)),
                ('st_srst', models.TextField(blank=True)),
                ('st_blast', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'db_table': 'samples_summary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaData',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sample_tag', models.TextField(default=b'', db_index=True, blank=True)),
                ('contact_name', models.TextField(default=b'')),
                ('contact_email', models.EmailField(default=b'', max_length=254)),
                ('contact_link', models.URLField(default=b'', blank=True)),
                ('sequencing_center', models.TextField(default=b'')),
                ('sequencing_center_link', models.URLField(default=b'', blank=True)),
                ('sequencing_date', models.DateField(default=b'1900-01-01', blank=True)),
                ('sequencing_libaray_method', models.TextField(default=b'', blank=True)),
                ('sequencing_platform', models.TextField(default=b'', blank=True)),
                ('publication_link', models.URLField(default=b'', blank=True)),
                ('pubmed_id', models.TextField(default=b'', blank=True)),
                ('doi', models.TextField(default=b'', blank=True)),
                ('funding_agency', models.TextField(default=b'', blank=True)),
                ('funding_agency_link', models.URLField(default=b'', blank=True)),
                ('strain', models.TextField(default=b'', blank=True)),
                ('isolation_date', models.DateField(default=b'1900-01-01', blank=True)),
                ('isolation_country', models.TextField(default=b'', blank=True)),
                ('isolation_city', models.TextField(default=b'', blank=True)),
                ('isolation_region', models.TextField(default=b'', blank=True)),
                ('host_name', models.TextField(default=b'', blank=True)),
                ('host_health', models.TextField(default=b'', blank=True)),
                ('host_age', models.PositiveSmallIntegerField(default=0, blank=True)),
                ('host_gender', models.TextField(default=b'', blank=True)),
                ('comments', models.TextField(default=b'', blank=True)),
                ('vancomycin_mic', models.DecimalField(default=-200.0, max_digits=6, decimal_places=3, blank=True)),
                ('penicillin_mic', models.DecimalField(default=-200.0, max_digits=6, decimal_places=3, blank=True)),
                ('oxacillin_mic', models.DecimalField(default=-200.0, max_digits=6, decimal_places=3, blank=True)),
                ('clindamycin_mic', models.DecimalField(default=-200.0, max_digits=6, decimal_places=3, blank=True)),
                ('daptomycin_mic', models.DecimalField(default=-200.0, max_digits=6, decimal_places=3, blank=True)),
                ('levofloxacin_mic', models.DecimalField(default=-200.0, max_digits=6, decimal_places=3, blank=True)),
                ('linezolid_mic', models.DecimalField(default=-200.0, max_digits=6, decimal_places=3, blank=True)),
                ('rifampin_mic', models.DecimalField(default=-200.0, max_digits=6, decimal_places=3, blank=True)),
                ('tetracycline_mic', models.DecimalField(default=-200.0, max_digits=6, decimal_places=3, blank=True)),
                ('trimethoprim_mic', models.DecimalField(default=-200.0, max_digits=6, decimal_places=3, blank=True)),
                ('source', models.TextField(default=b'', blank=True)),
                ('is_public', models.BooleanField(default=True, db_index=True)),
                ('is_paired', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pipeline',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('assembly', models.TextField()),
                ('gene', models.TextField()),
                ('kmer', models.TextField()),
                ('mlst', models.TextField()),
                ('sequence', models.TextField()),
                ('variant', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('sample', models.OneToOneField(primary_key=True, serialize=False, to='sample.MetaData')),
                ('path', models.FileField(default=b'', upload_to=sample.models.content_file_name)),
                ('md5sum', models.CharField(default=b'', unique=True, max_length=32)),
            ],
        ),
        migrations.AddField(
            model_name='pipeline',
            name='sample',
            field=models.OneToOneField(to='sample.MetaData'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
    ]
